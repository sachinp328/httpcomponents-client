## THIS IS A SAMPLE ".tas.yml" CONFIGURATION FILE
###1 FIRSTLY - You need to specify which testing framework you are using. Currently supported JS frameworks are : mocha, jest and jasmine.
# framework: junit # mocha # framework should be as per your project
version: 2
preMerge :    
  subModules:
    - name: httpclient5
      path : "./httpclient5"
      pattern: 
         - "**test/**/*.java"
      framework : junit
      frameworkVersion: 5
      runPreRunEveryTime: false # if set to true it will run pre steps on test execution as well
      preRun: 
        runEveryTime: false # if set to true it will run on test execution as well
        command:
           - mvn compile
           - mvn test-compile
    - name: httpclient5-win
      path : "./httpclient5-win"
      pattern: 
         - "**test/**/*.java"
      framework : junit
      frameworkVersion: 5
      runPreRunEveryTime: false # if set to true it will run pre steps on test execution as well
      preRun: 
        runEveryTime: false # if set to true it will run on test execution as well
        command:
           - mvn compile
           - mvn test-compile

postMerge:
  subModules:
    - name: httpclient5
      path : "./httpclient5"
      pattern: 
         - "**test/**/*.java"
      framework : junit
      frameworkVersion: 5
      runPreRunEveryTime: false # if set to true it will run pre steps on test execution as well
      preRun: 
        runEveryTime: false # if set to true it will run on test execution as well
        command:
           - mvn compile
           - mvn test-compile
    - name: httpclient5-win
      path : "./httpclient5-win"
      pattern: 
         - "**test/**/*.java"
      framework : junit
      frameworkVersion: 5
      runPreRunEveryTime: false # if set to true it will run pre steps on test execution as well
      preRun: 
        runEveryTime: false # if set to true it will run on test execution as well
        command:
           - mvn compile
           - mvn test-compile
#   # THIRDLY - You need to set postMerge patterns.
#   # These would be the glob patterns for the test cases that you want to execute in the post-merge jobs. A postMerge test execution job is initiated whenever a PR is merged into a branch.
#   preRun:
#   # SECONDLY - You need to set the preRun commands. These are shell commands executed inside the root level of your git repository before running the tests. preRun commands are executed using non-login shells by default, so you must explicitly source any dotfiles as part of the command.
#     command:
#       - mvn compile
#       - mvn test-compile
#   pattern:
#     # glob-patterns to discover tests to run in case of postMerge
#     - "**test/**/*.java"
tier: medium
